---
title: "Stretch Exercise 01 - Assignment05"
author: "Benjamin Reese"
format: html
self-contained: true
---


```{r, message=FALSE, warning=FALSE}
## Packages
library(tidyverse)
library(sf)
library(lubridate)
```

# Part One

## 1. Reading in L train and Chicago Shapefiles

```{r, message=FALSE, warning=FALSE}
## Chicago Shapefile
chi_shape <- st_read("data/Boundaries - Census Tracts - 2010/geo_export_098913a2-eb78-48e6-944e-bdaaf19b94f6.shp")

## Selecting only geoid10 and geometry
chi_shape <- chi_shape %>%
  select(geoid10, geometry)

## L train shapefile
l_shape <- st_read("data/CTARailLines/CTARailLines.shp")

## Setting l_shape crs
l_shape <- st_transform(l_shape, crs = 4326)  

## Setting chi_shape crs
chi_shape <- st_transform(chi_shape, crs = 4326)
```

## 2. Mapping L Station Locations Onto Chicago Census Tract Map

```{r, warning=FALSE, message=FALSE}
## Plotting L Train locations onto the Chicago Census Map
ggplot() +
  geom_sf(data=chi_shape) + 
  geom_sf(data=l_shape) +
  theme_void()

```

## 3. Performing Spatial Join to Filter Out L Train Stations Outside of Chicago

```{r, warning=FALSE, message=FALSE}
## Creating Chicago Boundaries
chi_poly <- st_union(chi_shape)


## Converting to sf object
chi_poly <- st_sf(chi_poly)


## Filtering and Joining
stations_filtered <- st_filter(l_shape, chi_poly)

```

## 4. Plotting L Train Station Locations Within Chicago Boundary

```{r, warning=FALSE, message=FALSE}
## Plotting Stations Within Chicago Boundary
ggplot() +
  geom_sf(data=chi_shape) +
  geom_sf(data=stations_filtered)  +
  theme_void()
```

## 5. Identifying homicides WITHIN 400 meters of L Stations

```{r, warning=FALSE, message=FALSE}

## Creating crimes_lim
## Data Loading
crimes <- read_csv("data/crimes-reduced.csv", col_types = cols(Latitude = col_character(), 
        Longitude = col_character()))

## Data Cleaning
crimes <- crimes %>%
  rename_all(funs(str_to_lower(.) %>% ## changing to lowercase
                    str_replace_all(., '\\s','_') ## removing spaces
                  )
  )

## Formatting date variable, filtering out NAs, and only including homicides
crimes_lim <- crimes %>%
  mutate(date = as_date(mdy_hms(date, tz= "America/Chicago"))) %>%
  filter(primary_type == "HOMICIDE", 
         !is.na(longitude), 
         !is.na(latitude),
         !is.na(date),
         date  >= today() - years(10) ## Past 10 Years, should update
)

## Setting crimes_lim coords
crimes_lim <- crimes_lim %>%
  st_as_sf(coords = c("longitude", "latitude")) %>%
  st_set_crs(value = 4326)

## Transforming crimes_lim
crimes_lim <- st_transform(crimes_lim, crs = 4326) 

## Creating the 400m buffer 
stations_buffered <- st_buffer(
  stations_filtered,
  dist = units::set_units(400, "m")
  )

## Joining crimes_lim to the buffered stations data
crime_stations <- st_join(crimes_lim, stations_buffered)

## Counting Homicides by buffered stations
crime_stations %>%
  as.tibble() %>%
  filter(!is.na(LONGNAME)) %>%
  group_by(LONGNAME, primary_type)
```

## 6. L Station With Most homicides

```{r, warning=FALSE, message=FALSE}
## Counting Homicides by buffered stations
crime_stations %>%
  as.tibble() %>%
  filter(!is.na(LONGNAME)) %>%
  group_by(LONGNAME, primary_type) %>%
  summarise(n=n()) %>%
  arrange(desc(n))
```

As shown in the tibble above, the Pulaski-Congress Station has the most nearby homicides with 45.
